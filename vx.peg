letter ::= letter:([a-z]) ;
group ::= '[' group:(letter+) ']';
dot ::= dot:('.');
star ::= star:('*');
tile ::= <tile> letter | group | dot | star </tile>;
rack ::= <rack> tile tile+ </rack> ;
unary ::= uop:('a' | 'b' | 'p') ;
binary ::= bop:("and" | "or" | "diff" | "&" | "|" | "-") ;
space ::= [ \t\r]+ ;
eql ::= "=" ;
eol ::= "\n"+ ;

(* variables *)
vchar ::= [A-Za-z0-9];
var ::= <var>name:([A-Z] vchar*)</var> ;

(* primitive operation *)
prim ::= <prim>unary space rack</prim> ;

set ::= var | '(' space? prim space? ')' | '(' space? expr space? ')';

expr ::= <expr> set space binary space set </expr> ;

intr ::= <intr> rack </intr> ;

line ::= intr | prim | expr ;

file ::= (line eol)* line? ;

start ::= file EOF ;
